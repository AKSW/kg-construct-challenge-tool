#!/usr/bin/env python3

import sys
import argparse
from bench_executor import Executor

VERSION = '0.1.0'

def print_cases(executor: Executor):
    cases = e.list()

    if not cases:
        print('No cases discovered!')
        sys.exit(-2)

    print(f'{len(cases)} cases discovered:')
    for index, case in enumerate(cases):
        print(f' {index+1}.{case["name"]}')

def execute_cases(executor: Executor):
    cases = e.list()

    if not cases:
        print('No cases discovered!')
        sys.exit(-3)

    for index, case in enumerate(cases):
        print(f'[{(100.0 * (index + 1)/len(cases)):5.1f}%] {case["name"]}')
        e.run(case)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Copyright by (c) Dylan Van Assche (2022), available under GPLv3 license',
                                     epilog='Please cite our paper if you make use of this tool')
    parser.add_argument('--version', action='version',
                        version=f'{parser.prog} {VERSION}')
    parser.add_argument(dest='command',
                        help='Command to execute, available commands: "list", "run"',
                        type=str)
    parser.add_argument('-r', '--root', dest='main_directory', default='.',
                        help='Root directory of all cases to execute, defaults to the current working directory',
                        type=str)
    parser.add_argument('-v', '--verbose', dest='verbose',
                        help='Turn on verbose output', action='store_true')
    args = parser.parse_args()

    if args.verbose:
        print(f'{parser.prog} {VERSION}')
        print(f'Command: {args.command}')
        print(f'Root directory: {args.main_directory}')

    e = Executor(args.main_directory, args.verbose)

    if args.command == 'list':
        print_cases(e)
    elif args.command == 'run':
        execute_cases(e)
    else:
        print(f'Unknown command: {args.command}', file=sys.stderr)
        sys.exit(-1)
